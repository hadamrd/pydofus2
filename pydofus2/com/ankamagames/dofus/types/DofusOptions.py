from pydofus2.com.ankamagames.jerakine.managers.OptionManager import OptionManager
from pydofus2.flash.geom.Point import Point


class DofusOptions(OptionManager):
    def __init__(self):
        super().__init__("dofus")
        self.add("optimize", False)
        self.add("forceRenderCPU", False)
        self.add("cacheMapEnabled", True)
        self.add("optimizeMultiAccount", True)
        self.add("fullScreen", False)
        self.add("autoConnectType", 1)
        self.add("connectionPort", 5555)
        self.add("showEveryMonsters", False)
        self.add("allowAnimsFun", True)
        self.add("turnPicture", True)
        self.add("mapCoordinates", True)
        self.add("remindTurn", True)
        self.add("confirmItemDrop", True)
        # self.add("currentUiSkin", ThemeManager.OFFICIAL_THEME_NAME)
        self.add("allowBannerShortcuts", True)
        self.add("dofusQuality", 1)
        self.add("askForQualitySelection", True)
        self.add("showNotifications", True)
        self.add("showEsportNotifications", True)
        self.add("showUIHints", True)
        self.add("hdvBlockPopupType", "Sometimes")
        self.add("showUsedPaPm", False)
        self.add("largeTooltipDelay", 500)
        self.add("spellTooltipDelay", 0)
        self.add("itemTooltipDelay", 0)
        self.add("pinTooltipOnClick", False)
        self.add("alwaysDisplayTheoreticalEffectsInTooltip", False)
        self.add("showOmegaUnderOrnament", True)
        self.add("lockUI", False)
        self.add("smallScreenFont", False)
        self.add("bigMenuButton", False)
        self.add("allowSpellEffects", True)
        self.add("allowHitAnim", True)
        self.add("legalAgreementTou", "fr#0")
        self.add("legalAgreementModsTou", "fr#0")
        self.add("flashQuality", 2)
        self.add("cellSelectionOnly", True)
        self.add("orderFighters", False)
        self.add("showAlignmentWings", False)
        self.add("showTacticMode", False)
        self.add("showMovementDistance", False)
        self.add("showMovementArea", True)
        self.add("showTurnsRemaining", True)
        self.add("toggleEntityIcons", True)
        self.add("hideDeadFighters", True)
        self.add("hideSummonedFighters", False)
        self.add("mapFilters", 4094)
        self.add("mapFilters_miniMap", 4094)
        self.add("mapFiltersConquest", 288)
        self.add("mapFiltersAnomaly", 1344)
        self.add("mapFiltersSearch", 256)
        self.add("showMiniMap", True)
        self.add("showMapGrid", False)
        self.add("showMiniMapGrid", False)
        self.add("showLogPvDetails", True)
        self.add("notificationsAlphaWindows", False)
        self.add("notificationsMode", 1)
        self.add("notificationsDisplayDuration", 5)
        self.add("notificationsMaxNumber", 5)
        # self.add("notificationsPosition", ExternalNotificationPositionEnum.BOTTOM_RIGHT)
        self.add("creaturesFightMode", False)
        self.add("warnOnAllianceItemAgression", True)
        self.add("disableGuildMotd", False)
        self.add("disableAllianceMotd", False)
        self.add("zoomOnMouseWheel", True)
        self.add("showPermanentTargetsTooltips", False)
        self.add("showDamagesPreview", True)
        self.add("showMovePreview", True)
        self.add("showBreed", True)
        self.add("spectatorAutoShowCurrentFighterInfo", False)
        self.add("enableForceWalk", True)
        self.add("showMountsInFight", True)
        self.add("havenbagEditPosition", Point(390, 212))
        # self.add("screenshotsDirectory", ScreenCaptureFrame.getDefaultDirectory())
        self.add("showFinishMoves", True)
        self.add("followQuestOnStarted", True)
        self.add("shadowCharacter", False)
        self.add("forceDefaultTacticalModeTemplate", False)
        self.add("useNewTacticalMode", True)
        self.add("useTheoreticalValuesInSpellTooltips", False)
        self.add("resetUIPositions", False)
        self.add("resetNotifications", False)
        self.add("resetUIHints", False)
        self.add("resetColors", False)
        self.add("delaySkipTurn", True)
